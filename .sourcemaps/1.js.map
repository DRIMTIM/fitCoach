{"version":3,"sources":["../../src/pages/password-reset/password-reset.module.ts","../../src/validators/email.ts","../../src/pages/password-reset/password-reset.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACK;AAUrD,IAAa,uBAAuB;IAApC;IAAsC,CAAC;IAAD,8BAAC;AAAD,CAAC;AAA1B,uBAAuB;IARnC,+DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,0EAAiB;SAClB;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,0EAAiB,CAAC;SAC5C;KACF,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;ACVpC;AAAA;IAAA;IAcA,CAAC;IAZQ,sBAAO,GAAd,UAAe,OAAoB;QACjC,IAAM,EAAE,GAAG,4DAA4D,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAE5F,EAAE,CAAC,CAAC,EAAE,CAAC,EAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,MAAM,CAAC;YACL,cAAc,EAAE,IAAI;SACrB,CAAC;IAEJ,CAAC;IACH,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AChBwC;AACgC;AACN;AACX;AACD;AAQvD,IAAa,iBAAiB;IAE1B,2BAAmB,OAAsB,EAAS,SAA0B,EACzD,WAAwB,EAAS,YAA0B;QAD3D,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAiB;QACzD,gBAAW,GAAX,WAAW,CAAa;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAE1E,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,KAAK,CAAC;YACvC,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ;oBAC/C,yEAAc,CAAC,OAAO,CAAC,CAAC,CAAC;SAChC,CAAC,CAAC;IACP,CAAC;IACD,yCAAa,GAAb;QAAA,iBAyBC;QAxBG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9C,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC;iBAC9D,IAAI,CAAC,UAAC,IAAI;gBACP,IAAM,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,OAAO,EAAE,6CAA6C;oBACtD,OAAO,EAAE,CAAC;4BACN,IAAI,EAAE,IAAI;4BACV,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE;gCACL,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;4BACvB,CAAC;yBACJ,CAAC;iBACL,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC,EAAE,UAAC,KAAK;gBACL,IAAM,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,OAAO,EAAE,KAAK,CAAC,OAAO;oBACtB,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;iBAC5C,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC,CAAC,CAAC;QACX,CAAC;IACL,CAAC;IACL,wBAAC;AAAD,CAAC;AApCY,iBAAiB;IAL7B,wEAAS,EAAE;IACX,gEAAS,CAAC;QACP,QAAQ,EAAE,qBAAqB;OACG;KACrC,CAAC;yJAG8E;QAC5C,WAAW,EAAuB,CAAY;AAiCjF;SApCY,iBAAiB,gB","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { PasswordResetPage } from './password-reset';\n\n@NgModule({\n  declarations: [\n    PasswordResetPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(PasswordResetPage),\n  ],\n})\nexport class PasswordResetPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/password-reset/password-reset.module.ts","import { FormControl } from '@angular/forms';\n\nexport class EmailValidator {\n  \n  static isValid(control: FormControl){\n    const re = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(control.value);\n    \n    if (re){\n      return null;\n    }\n    \n    return {\n      \"invalidEmail\": true\n    };\n    \n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","import {Component } from '@angular/core';\nimport {IonicPage, NavController, AlertController } from 'ionic-angular';\nimport {FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {AuthProvider } from '../../providers/auth/auth';\nimport {EmailValidator } from '../../validators/email';\n\n\n@IonicPage()\n@Component({\n    selector: 'page-password-reset',\n    templateUrl: 'password-reset.html',\n})\nexport class PasswordResetPage {\n    public passwordResetForm: FormGroup;\n    constructor(public navCtrl: NavController, public alertCtrl: AlertController,\n                public formBuilder: FormBuilder, public authProvider: AuthProvider) {\n\n        this.passwordResetForm = formBuilder.group({\n            email: ['', Validators.compose([Validators.required,\n                EmailValidator.isValid])]\n        });\n    }\n    passwordReset(){\n        if (!this.passwordResetForm.valid){\n            console.log(this.passwordResetForm.value);\n        } else {\n            this.authProvider.passwordReset(this.passwordResetForm.value.email)\n                .then((user) => {\n                    const alert = this.alertCtrl.create({\n                        message: \"We just sent you a reset link to your email\",\n                        buttons: [{\n                            text: \"Ok\",\n                            role: 'cancel',\n                            handler: () => {\n                                this.navCtrl.pop();\n                            }\n                        }]\n                    });\n                    alert.present();\n                }, (error) => {\n                    const alert = this.alertCtrl.create({\n                        message: error.message,\n                        buttons: [{ text: \"Ok\", role: 'cancel' }]\n                    });\n                    alert.present();\n                });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/password-reset/password-reset.ts"],"sourceRoot":""}