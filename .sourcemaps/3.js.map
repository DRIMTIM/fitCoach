{"version":3,"sources":["../../src/pages/client-create/client-create.module.ts","../../src/validators/email.ts","../../src/pages/client-create/client-create.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACG;AAUnD,IAAa,sBAAsB;IAAnC;IAAqC,CAAC;IAAD,6BAAC;AAAD,CAAC;AAAzB,sBAAsB;IARlC,+DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,wEAAgB;SACjB;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,wEAAgB,CAAC;SAC3C;KACF,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;ACVnC;AAAA;IAAA;IAcA,CAAC;IAZQ,sBAAO,GAAd,UAAe,OAAoB;QACjC,IAAM,EAAE,GAAG,4DAA4D,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAE5F,EAAE,CAAC,CAAC,EAAE,CAAC,EAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,MAAM,CAAC;YACL,cAAc,EAAE,IAAI;SACrB,CAAC;IAEJ,CAAC;IACH,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AChByC;AACe;AACW;AACL;AACT;AAOtD,IAAa,gBAAgB;IAIzB,0BAAmB,OAAsB,EAAS,cAA8B,EAAS,WAAwB;QAA9F,YAAO,GAAP,OAAO,CAAe;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAE7G,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,KAAK,CAAC;YACtC,IAAI,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,yEAAc,CAAC,OAAO,CAAC,CAAC,CAAC;YAC9E,cAAc,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;SAC5C,CAAC,CAAC;IACP,CAAC;IAED,uCAAY,GAAZ;QAAA,iBAYC;QAXG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC7C,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,cAAc,CAAC,YAAY,CACxB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,cAAc,CAAC;iBACnH,IAAI,CAAE;gBACH,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YACvB,CAAC,EAAE,eAAK;gBACJ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;QACX,CAAC;IACL,CAAC;IACL,uBAAC;AAAD,CAAC;AA1BY,gBAAgB;IAL5B,wEAAS,EAAE;IACX,gEAAS,CAAC;QACP,QAAQ,EAAE,oBAAoB;OACG;KACpC,CAAC;qBAKmH;AAsBpH;SA1BY,gBAAgB,gB","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ClientCreatePage } from './client-create';\n\n@NgModule({\n  declarations: [\n    ClientCreatePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ClientCreatePage),\n  ],\n})\nexport class ClientCreatePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/client-create/client-create.module.ts","import { FormControl } from '@angular/forms';\n\nexport class EmailValidator {\n  \n  static isValid(control: FormControl){\n    const re = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(control.value);\n    \n    if (re){\n      return null;\n    }\n    \n    return {\n      \"invalidEmail\": true\n    };\n    \n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController } from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ClientProvider } from '../../providers/client/client';\nimport {EmailValidator} from \"../../validators/email\";\n\n@IonicPage()\n@Component({\n    selector: 'page-client-create',\n    templateUrl: 'client-create.html',\n})\nexport class ClientCreatePage {\n\n    public clientCreateForm:FormGroup;\n\n    constructor(public navCtrl: NavController, public clientProvider: ClientProvider, public formBuilder: FormBuilder) {\n\n        this.clientCreateForm = formBuilder.group({\n            name: ['', Validators.required],\n            email: ['', Validators.compose([Validators.required, EmailValidator.isValid])],\n            startingWeight: ['', Validators.required]\n        });\n    }\n\n    clientCreate(): void {\n        if (!this.clientCreateForm.valid){\n            console.log(this.clientCreateForm.value);\n        } else {\n            this.clientProvider.clientCreate(\n                    this.clientCreateForm.value.name, this.clientCreateForm.value.email, this.clientCreateForm.value.startingWeight)\n                .then( () => {\n                    this.navCtrl.pop();\n                }, error => {\n                    console.error(error);\n                });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/client-create/client-create.ts"],"sourceRoot":""}